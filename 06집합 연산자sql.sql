-- 집합연산자
-- UNION - 합집합(중복X)
-- UNION ALL - 합집합(중복O)
-- INTERSECT - 교집합
-- MINUS - 차집합

SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%';
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

-- 컬럼 개수가 일치해야 집합연산자 사용이 가능합니다

--UNION - 합집합(중복X)
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION -- 중복은 없애줌
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

--UNION ALL - 합집합(중복O)
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
UNION ALL -- 중복되어도 반복해서 뽑아줌
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

--INTERSECT - 교집합
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
INTERSECT -- 교집합
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

--MINUS - 차집합
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE HIRE_DATE LIKE '04%'
MINUS -- 차집합
SELECT FIRST_NAME, HIRE_DATE FROM EMPLOYEES WHERE DEPARTMENT_ID = 20;

--------------------------------------------------------------------------------
-- 가상테이블을 합쳐서 사용할 수도 있습니다
SELECT 'PARK', 200 FROM DUAL
UNION ALL
SELECT 'KIM', 300 FROM DUAL
UNION ALL
SELECT 'CHOI', 400 FROM DUAL;