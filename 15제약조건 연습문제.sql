--문제1.
--다음과 같은 테이블을 생성하고 데이터를 insert해보세요.
DROP TABLE MEM;

SELECT * FROM MEM;

SELECT * FROM USER_CONSTRAINTS WHERE TABLE_NAME = 'MEM';

CREATE TABLE MEM (
    M_NAME VARCHAR2(20) NOT NULL,
    M_NUM NUMBER(5),
    REG_DATE DATE DEFAULT SYSDATE NOT NULL,
    SALARY NUMBER(10),
    LOCA NUMBER(4),
    
    CONSTRAINT MEM_MEMNUM_PK PRIMARY KEY (M_NUM),
    CONSTRAINT MEM_REGDATE_UK UNIQUE (REG_DATE),
    CONSTRAINT MEM_SLALRY_CK CHECK( SALARY > 0 ),
    CONSTRAINT MEN_LOAC_LOC_LOCID_FK FOREIGN KEY (LOCA) REFERENCES LOCATIONS (LOCATION_ID)
);

INSERT INTO MEM VALUES ( 'AAA' , 1, '2018-07-01', 5000, 1800);
INSERT INTO MEM VALUES ( 'BBB' , 2, '2018-07-02', 3000, 1900);
INSERT INTO MEM VALUES ( 'CCC' , 3, '2018-07-03', 3000, 2000);
INSERT INTO MEM VALUES ( 'DDD' , 4, SYSDATE, 2000, 2000);




---------
SELECT * FROM MEMBERS;

DROP TABLE MEMBERS;

CREATE TABLE MEMBERS (
    M_NAME VARCHAR2(20) NOT NULL,
    M_NUM NUMBER(5),
    REG_DATE DATE NOT NULL,
    SALARY NUMBER(10),
    LOCA NUMBER(4)
);    
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_MEMNUM_PK PRIMARY KEY (M_NUM);
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_REGDATE_UK UNIQUE (REG_DATE);
ALTER TABLE MEMBERS ADD CONSTRAINT MEM_SLALRY_CK CHECK( SALARY > 0 );
ALTER TABLE MEMBERS ADD CONSTRAINT MEN_LOAC_LOC_LOCID_FK FOREIGN KEY (LOCA) REFERENCES LOCATIONS (LOCATION_ID);

INSERT INTO MEM VALUES ( 'AAA' , 1, '2018-07-01', 5000, 1800);
INSERT INTO MEM VALUES ( 'BBB' , 2, '2018-07-02', 3000, 1900);
INSERT INTO MEM VALUES ( 'CCC' , 3, '2018-07-03', 3000, 2000);
INSERT INTO MEM VALUES ( 'DDD' , 4, SYSDATE, 2000, 2000);

--테이블 제약조건은 아래와 같습니다. 
--조건) M_NAME 는 가변문자형 20byte, 널값을 허용하지 않음
--조건) M_NUM 은 숫자형 5자리, PRIMARY KEY 이름(mem_memnum_pk) 
--조건) REG_DATE 는 날짜형, 널값을 허용하지 않음, UNIQUE KEY 이름:(mem_regdate_uk)
--조건) SALARY 숫자형 10자리, CHECK제약 (0 보다 크다)
--조건) LOCA 숫자형 4자리, FOREIGN KEY – 참조 locations테이블(location_id) 이름:(mem_loca_loc_locid_fk)
--```
--
--| M_NAME | M_NUM | REG_DATE   | SALARY | LOCA |
--| ---    | ---   | ---        | ---    | ---  | 
--| AAA    | 1     | 2018-07-01 | 5000   | 1800 |
--| BBB    | 2     | 2018-07-02 | 3000   | 1900 |
--| CCC    | 3     | 2018-07-03 | 3000   | 2000 |
--| DDD    | 4     | 오늘날짜    | 2000   | 2000 |





--문제2.
--도서테이블, 도서 대여 이력 테이블을 생성하려 합니다.
--도서 테이블은
--도서번호(문자) PK, 도서명(문자), 출판사(문자), 입고일(날짜)
CREATE TABLE BOOK (
    BOOK_ID VARCHAR(20),
    BOOK_NAME VARCHAR2(50) NOT NULL,
    BOOK_PUBLISHER VARCHAR2(50) NOT NULL,
    BOOK_DATE DATE DEFAULT SYSDATE,
    
    CONSTRAINT BOOK_BOOK_ID_PK PRIMARY KEY (BOOK_ID)
);

-----------------

CREATE TABLE BOOK (
    BOOK_NUM VARCHAR(20) CONSTRAINT BOOK_NUM_PK PRIMARY KEY,
    BOOK_NAME VARCHAR2(50) NOT NULL,
    PUBLISHER VARCHAR2(50) NOT NULL,
    STORE_DATE DATE DEFAULT SYSDATE
);



--도서 대여 이력 테이블은
--대여번호(숫자) PK, 도서번호(문자) FK, 대여일(날짜), 반납일(날짜), 반납여부(Y/N)
--를 가집니다.
--적절한 테이블을 생성해 보세요
CREATE TABLE BOOK_HISTORY(
    RANTAL_ID NUMBER(5),
    BOOK_ID VARCHAR2(20),
    RANTAL_DATE DATE DEFAULT SYSDATE,
    RETURN_DATE DATE DEFAULT SYSDATE,
    RETURN_STATUS CHECK(RETURN_STATUS )
);

----------------
CREATE TABLE BOOK_HISTORY(
    HISTORY_NUM NUMBER(10),
    BOOK_NUM VARCHAR2(30),
    START_DATE DATE NOT NULL,
    END_DATE DATE,
    RETURN_YN VARCHAR2(1)
    CONSTRAINT HISTORY_NUM_PK PRIMARY KEY,
    CONSTRAINT HISTORY_BOOK_NUM_FK FOREIGN KEY (BOOK_NUM) REFERENCES BOOK(BOOK_NUM),
    CONSTRAINT HISTORY_RETURN_CK CHECK(RETURN_YN ('Y', 'N'))
);
